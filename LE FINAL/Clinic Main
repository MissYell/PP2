import javafx.application.Application;
import javafx.geometry.*;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.*;
import javafx.stage.Stage;

public class ClinicMain extends Application {

    private TextField idField;
    private TextField nameField;
    private TextField numField; 

    @Override
    public void start(Stage primaryStage) {
        primaryStage.setTitle("Dental Application");
        primaryStage.setScene(createProcedureScene(primaryStage));
        primaryStage.show();
    }

    private Scene createProcedureScene(Stage primaryStage) {
        // Dental Procedure UI Elements
        Label titleLabel = new Label("Dental Procedure Information");

        Label nameLabel = new Label("Name: ");
        nameField = new TextField();
        nameField.setPrefWidth(300);
        nameLabel.setStyle("-fx-font-size: 14px; -fx-font-weight: bold; -fx-text-fill: black;");

        Label idLabel = new Label("Patient ID:");
        idField = new TextField();
        idLabel.setStyle("-fx-font-size: 14px; -fx-font-weight: bold; -fx-text-fill: black;");

        // Label and TextField for Contact Number
        Label numLabel = new Label("Contact Number: ");
        numField = new TextField();
        numLabel.setStyle("-fx-font-size: 14px; -fx-font-weight: bold; -fx-text-fill: black;");

        Button submitButton = new Button("Add Patient");
        Button backButton = new Button("Back");
        Button clearButton = new Button("Clear");

        // Clear button functionality
        clearButton.setOnAction(event -> clearProcedureFields());

        // Layout for buttons
        HBox buttonBox = new HBox(10, backButton, clearButton, submitButton);
        buttonBox.setAlignment(Pos.CENTER_RIGHT);

        // Layout for Dental Procedure
        GridPane procedureLayout = new GridPane();
        procedureLayout.setAlignment(Pos.CENTER);
        procedureLayout.setPadding(new Insets(50));
        procedureLayout.setHgap(30);
        procedureLayout.setVgap(30);
        procedureLayout.addRow(0, nameLabel, nameField);
        procedureLayout.addRow(1, idLabel, idField);
        // Add contact number field to the layout
        procedureLayout.addRow(2, numLabel, numField);
        procedureLayout.add(buttonBox, 1, 3);

        // Banner image at the top
        Image bannerImage = new Image("file:/C:/Users/Admin/Pictures/image/banner2.png");
        ImageView bannerImageView = new ImageView(bannerImage);
        bannerImageView.setFitWidth(1300);
        bannerImageView.setFitHeight(100);
        bannerImageView.setPreserveRatio(true);

        // File icon button
        Image fileIcon = new Image("file:/C:/Users/Admin/Pictures/image/file3.png");
        ImageView fileIconView = new ImageView(fileIcon);
        fileIconView.setFitWidth(50);
        fileIconView.setFitHeight(50);
        Button fileButton = new Button();
        fileButton.setGraphic(fileIconView);
        fileButton.setStyle("-fx-background-color: transparent;");

        fileButton.setOnAction(event -> {
            PatientReport patientReport = new PatientReport();
            patientReport.start(primaryStage);
        });

        // Top bar with file button
        HBox topBar = new HBox();
        topBar.setPadding(new Insets(10));
        topBar.setAlignment(Pos.TOP_RIGHT);
        topBar.getChildren().add(fileButton);

        VBox topSection = new VBox();
        topSection.getChildren().addAll(bannerImageView, topBar);

        BorderPane borderPane = new BorderPane();
        borderPane.setTop(topSection);
        borderPane.setCenter(procedureLayout);
        borderPane.setStyle("-fx-background-color: #FDF6FE;");

        Scene procedureScene = new Scene(borderPane, 1300, 600);

        
        backButton.setOnAction(event -> {
            DentalSystemDashBoard dentalSystemDashBoard = new DentalSystemDashBoard();
            dentalSystemDashBoard.start(primaryStage);
        });
        submitButton.setOnAction(event -> {
            submitProcedure();
            PatientInformation patientInformation = new PatientInformation();
            patientInformation.start(primaryStage);
        });

        return procedureScene;
    }

    private void submitProcedure() {
        String id = idField.getText();
        String name = nameField.getText();
        String num = numField.getText();

        if (id.isEmpty() || name.isEmpty() || num.isEmpty()) {
            showAlert("Error", "All fields must be filled.");
        } else {
            try {
                PatientReport.addPatient(new PatientReport.Patient(name, id, num));
                showAlert("Success", "Patient " + name + " added.");
                clearProcedureFields();
            } catch (Exception e) {
                showAlert("Error", "Invalid input format.");
            }
        }
    }

    private void showAlert(String title, String message) {
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.showAndWait();
    }

    private void clearProcedureFields() {
        idField.clear();
        nameField.clear();
        numField.clear();
    }

    public static void main(String[] args) {
        launch(args);
    }
}
